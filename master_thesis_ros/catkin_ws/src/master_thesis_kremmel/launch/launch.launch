<?xml version="1.0"?>
<launch>
  <arg name="file_server" default="true" />
  <arg name="teleop" default="true" />
  <arg name="joy_teleop" default="false" />
  <arg name="gui" default="false" />
  <arg name="rviz" default="true" />
  <arg name="x_pos" default="0" />
  <arg name="y_pos" default="0" />
  <arg name="z_pos" default="0" />
  <arg name="yaw" default="0" />
  <arg name="path_to_world" default="$(find master_thesis_kremmel)/worlds/test_world.world" />

  <group if="$(arg file_server)">
    <include file="$(find file_server)/launch/ros_sharp_communication.launch">
      <arg name="port" value="9090" />
    </include>
  </group>

  <include file="$(find master_thesis_kremmel)/launch/turtlebot3_VLP16.launch">
    <arg name="world_name" value="$(arg path_to_world)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="x_pos" value="$(arg x_pos)" />
    <arg name="y_pos" value="$(arg y_pos)" />
    <arg name="z_pos" value="$(arg y_pos)" />
    <arg name="yaw" value="$(arg yaw)" />
  </include>

  <!--Start Teleop -->
  <group if="$(arg teleop)">
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <param name="model" value="$(arg model)"/>
    <!-- turtlebot3_teleop_key already has its own built in velocity smoother -->
    <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_keyboard"  output="screen"  launch-prefix="xterm -e"/>
  </group>

  <group if="$(arg joy_teleop)">
    <arg name="joy_dev" default="/dev/input/js0" />
    <arg name="config_filepath" default="$(find master_thesis_kremmel)/config/xbox.yaml" />
    
    <node pkg="joy" type="joy_node" name="joy_node">
      <param name="dev" value="$(arg joy_dev)" />
      <param name="deadzone" value="0.3" />
      <param name="autorepeat_rate" value="20" />
    </node>

    <node pkg="teleop_twist_joy" name="teleop_twist_joy" type="teleop_node">
      <rosparam command="load" file="$(arg config_filepath)" />
    </node>
  </group>

  <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_odom"
      args="0 0 0 0 0 0 world odom" />

  <!-- Start Rviz -->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz"
      args="-d $(find master_thesis_kremmel)/config/rviz.rviz" />
  </group>

  <!-- Start Nodes -->
  <node name="LandmarkProcessor" type="LandmarkProcessor" pkg="master_thesis_kremmel"
    output="screen" />
  <node name="EKFSlam" type="EKFSlam" pkg="master_thesis_kremmel" output="screen">
    <param name="alpha1" value="0.1" />
    <param name="alpha2" value="0.0" />
    <param name="alpha3" value="0.001" />
    <param name="alpha4" value="0.1" />
  </node>

  <!-- PS4 Controller arguments -->
  <!-- <arg name="addr" default="84:30:95:1B:29:26" />
  <arg name="use_standard_msgs" default="true" />
  <arg name="autorepeat_rate" default="0" if="$(arg use_standard_msgs)" /> -->

  <!-- Start DualShock4 Node -->
  <!-- <group if="$(arg joy_teleop)">
    <node pkg="ds4_driver" type="ds4_driver_node.py" name="ds4_driver" output="screen">
      <rosparam command="load" file="$(find ds4_driver)/config/params.yaml" />
      <param name="device_addr" value="$(arg addr)" />
      <param name="use_standard_msgs" value="$(arg use_standard_msgs)" />
      <param name="autorepeat_rate" value="$(arg autorepeat_rate)" if="$(arg use_standard_msgs)" />
    </node>
  </group> -->

  <!-- Start Controller -->
  <!-- <include file="$(find taurob_tracker_control)/launch/taurob_tracker_control.launch" /> -->

  <!-- <node name="Evaluator" type="Evaluator" pkg="master_thesis_kremmel" output="screen" /> -->
  <!-- <node name="CmdVelSmoother" type="CmdVelSmoother" pkg="master_thesis_kremmel" output="screen" /> -->
  <!-- <node name="PredictionTest" type="PredictionTest" pkg="master_thesis_kremmel" output="screen" /> -->
</launch>
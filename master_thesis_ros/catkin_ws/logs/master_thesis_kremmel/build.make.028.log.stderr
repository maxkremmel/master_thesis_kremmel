In file included from [01m[K/usr/include/boost/bind.hpp:22[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/publisher.h:35[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/node_handle.h:32[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:45[m[K,
                 from [01m[K/home/max/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:1[m[K:
/usr/include/boost/bind/bind.hpp: In instantiation of â€˜[01m[Kstruct boost::_bi::result_traits<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&)>[m[Kâ€™:
[01m[K/usr/include/boost/bind/bind.hpp:1284:48:[m[K   required from â€˜[01m[Kclass boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >[m[Kâ€™
[01m[K/home/max/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:46:75:[m[K   required from here
[01m[K/usr/include/boost/bind/bind.hpp:75:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvoid (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&)[m[Kâ€™ is not a class, struct, or union type
   75 |     typedef typename F::result_type [01;31m[Ktype[m[K;
      |                                     [01;31m[K^~~~[m[K
In file included from [01m[K/usr/include/boost/function/detail/maybe_include.hpp:78[m[K,
                 from [01m[K/usr/include/boost/function/detail/function_iterate.hpp:14[m[K,
                 from [01m[K/usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:92[m[K,
                 from [01m[K/usr/include/boost/function.hpp:71[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/max/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:1[m[K:
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker9<FunctionObj, R, T0, T1, T2, T3, T4, T5, T6, T7, T8>::invoke(boost::detail::function::function_buffer&, T0, T1, T2, T3, T4, T5, T6, T7, T8) [with FunctionObj = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:931:38:[m[K   required from â€˜[01m[Kvoid boost::function9<R, T1, T2, T3, T4, T5, T6, T7, T8, T9>::assign_to(Functor) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:720:7:[m[K   required from â€˜[01m[Kboost::function9<R, T1, T2, T3, T4, T5, T6, T7, T8, T9>::function9(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1068:16:[m[K   required from â€˜[01m[Kboost::function<R(T0, T1, T2, T3, T4, T5, T6, T7, T8)>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >; R = void; T0 = const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&; T1 = const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&; T2 = const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&; T3 = const boost::shared_ptr<const message_filters::NullType>&; T4 = const boost::shared_ptr<const message_filters::NullType>&; T5 = const boost::shared_ptr<const message_filters::NullType>&; T6 = const boost::shared_ptr<const message_filters::NullType>&; T7 = const boost::shared_ptr<const message_filters::NullType>&; T8 = const boost::shared_ptr<const message_filters::NullType>&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/signal9.h:281:287:[m[K   required from â€˜[01m[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >; M0 = sensor_msgs::JointState_<std::allocator<void> >; M1 = sensor_msgs::PointCloud2_<std::allocator<void> >; M2 = nav_msgs::Odometry_<std::allocator<void> >; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:310:40:[m[K   required from â€˜[01m[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::JointState_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> >, nav_msgs::Odometry_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/max/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:46:76:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:158:11:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(boost::_bi::bind_t<boost::_bi::unspecified, boost::_bi::bind_t<boost::_bi::unspecified, void (EKFSlam::*)(const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&), boost::_bi::list3<boost::_bi::value<EKFSlam*>, boost::arg<1>, boost::arg<2> > >, boost::_bi::list9<boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4>, boost::arg<5>, boost::arg<6>, boost::arg<7>, boost::arg<8>, boost::arg<9> > >) (const boost::shared_ptr<const sensor_msgs::JointState_<std::allocator<void> > >&, const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >&, const boost::shared_ptr<const nav_msgs::Odometry_<std::allocator<void> > >&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&, const boost::shared_ptr<const message_filters::NullType>&)[m[Kâ€™
  158 |           [01;31m[KBOOST_FUNCTION_RETURN[m[K((*f)(BOOST_FUNCTION_ARGS));
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/EKFSlam.dir/build.make:63: CMakeFiles/EKFSlam.dir/src/ekfSlam.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:236: CMakeFiles/EKFSlam.dir/all] Error 2
make: *** [Makefile:141: all] Error 2

[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:418:59:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kmessage_filters::Subscriber<sensor_msgs::PointCloud2_<std::allocator<void> > > EKFSlam::laserScanSubscriber[m[Kâ€™
  418 |     message_filters::Subscriber<sensor_msgs::PointCloud2> [01;31m[KlaserScanSubscriber[m[K;
      |                                                           [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:415:21:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kros::Subscriber EKFSlam::laserScanSubscriber[m[Kâ€™
  415 |     ros::Subscriber [01;36m[KlaserScanSubscriber[m[K;
      |                     [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:[m[K In constructor â€˜[01m[KEKFSlam::EKFSlam(ros::NodeHandle&)[m[Kâ€™:
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:31:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ros::Subscriber[m[Kâ€™ has no member named â€˜[01m[Ksubscribe[m[Kâ€™; did you mean â€˜[01m[KSubscriber[m[Kâ€™?
   31 |         odomSubscriber.[01;31m[Ksubscribe[m[K(n, "/odom", 10);
      |                        [01;31m[K^~~~~~~~~[m[K
      |                        [32m[KSubscriber[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:32:29:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ros::Subscriber[m[Kâ€™ has no member named â€˜[01m[Ksubscribe[m[Kâ€™; did you mean â€˜[01m[KSubscriber[m[Kâ€™?
   32 |         laserScanSubscriber.[01;31m[Ksubscribe[m[K(n, "/transformed_laserscan", 10);
      |                             [01;31m[K^~~~~~~~~[m[K
      |                             [32m[KSubscriber[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:467:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KEKFSlam::predict()[m[Kâ€™
  467 |         EKFSlamObject.predict([01;31m[K)[m[K;
      |                               [01;31m[K^[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:114:10:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid EKFSlam::predict(const OdometryConstPtr&, const PointCloud2ConstPtr&)[m[Kâ€™
  114 |     void [01;36m[Kpredict[m[K(const nav_msgs::OdometryConstPtr &new_odom_msg, const sensor_msgs::PointCloud2ConstPtr &new_laserscan_msg)
      |          [01;36m[K^~~~~~~[m[K
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:114:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
In file included from [01m[K/opt/ros/noetic/include/message_filters/time_synchronizer.h:38[m[K,
                 from [01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:12[m[K:
/opt/ros/noetic/include/message_filters/synchronizer.h: In instantiation of â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&, F6&, F7&, F8&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; F4 = message_filters::NullFilter<message_filters::NullType>; F5 = message_filters::NullFilter<message_filters::NullType>; F6 = message_filters::NullFilter<message_filters::NullType>; F7 = message_filters::NullFilter<message_filters::NullType>; F8 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™:
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:282:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&, F6&, F7&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; F4 = message_filters::NullFilter<message_filters::NullType>; F5 = message_filters::NullFilter<message_filters::NullType>; F6 = message_filters::NullFilter<message_filters::NullType>; F7 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:275:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&, F6&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; F4 = message_filters::NullFilter<message_filters::NullType>; F5 = message_filters::NullFilter<message_filters::NullType>; F6 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:268:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&, F5&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; F4 = message_filters::NullFilter<message_filters::NullType>; F5 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:261:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&, F4&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; F4 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:254:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&, F3&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; F3 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:247:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&, F2&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; F2 = message_filters::NullFilter<message_filters::NullType>; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:240:5:[m[K   required from â€˜[01m[Kvoid message_filters::Synchronizer<Policy>::connectInput(F0&, F1&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:160:5:[m[K   required from â€˜[01m[Kmessage_filters::Synchronizer<Policy>::Synchronizer(const Policy&, F0&, F1&) [with F0 = ros::Subscriber; F1 = ros::Subscriber; Policy = message_filters::sync_policies::ApproximateTime<nav_msgs::Odometry_<std::allocator<void> >, sensor_msgs::PointCloud2_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:37:78:[m[K   required from here
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:290:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ros::Subscriber[m[Kâ€™ has no member named â€˜[01m[KregisterCallback[m[Kâ€™
  290 |     input_connections_[0] = [01;31m[Kf0.registerCallback[m[K(boost::function<void(const M0Event&)>(boost::bind(&Synchronizer::template cb<0>, this, boost::placeholders::_1)));
      |                             [01;31m[K~~~^~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/noetic/include/message_filters/time_synchronizer.h:38[m[K,
                 from [01m[K/home/max/Dokumente/master_thesis_kremmel/master_thesis_ros/catkin_ws/src/master_thesis_kremmel/src/ekfSlam.cpp:12[m[K:
[01m[K/opt/ros/noetic/include/message_filters/synchronizer.h:291:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ros::Subscriber[m[Kâ€™ has no member named â€˜[01m[KregisterCallback[m[Kâ€™
  291 |     input_connections_[1] = [01;31m[Kf1.registerCallback[m[K(boost::function<void(const M1Event&)>(boost::bind(&Synchronizer::template cb<1>, this, boost::placeholders::_1)));
      |                             [01;31m[K~~~^~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/EKFSlam.dir/build.make:63: CMakeFiles/EKFSlam.dir/src/ekfSlam.cpp.o] Fehler 1
make[1]: *** [CMakeFiles/Makefile2:280: CMakeFiles/EKFSlam.dir/all] Fehler 2
make: *** [Makefile:141: all] Fehler 2
